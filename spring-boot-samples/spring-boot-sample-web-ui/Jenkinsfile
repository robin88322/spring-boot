pipeline {

    agent any
    environment {
        finalname = "spring-boot-smoke-test-web-ui"
    }
    tools {
        maven "Maven"
        jdk "java"
    }
    
     stages {
        stage('Clone repo') {
            steps {
                git branch: '2.1.x',
               // credentialsId: 'github-token',
                url: 'https://github.com/robin88322/spring-boot.git'
            }
        }
        stage(BUILD) {
            steps {
                sh "mvn clean install -f /var/lib/jenkins/workspace/build/spring-boot-samples/spring-boot-sample-web-ui/pom.xml -Dmaven.test.skip=true -Drevision=2.1.8.RELEASE"                 
                
                }


        }
         
        stage(UPLOAD) {
            steps {
                rtServer (
                    id: "my_artifact",
                    url: "http://35.197.63.19:8081/artifactory",
                    // If you're using username and password:
                    username: "devops1",
                    password: "Yuraskos12345"
                )      
                rtUpload (
                    serverId: "my_artifact",
                    spec:
                        """{
                        "files": [
                            {
                            "pattern": "/var/lib/jenkins/workspace/build/spring-boot-samples/spring-boot-sample-web-ui/target/*.jar",
                            "target": "example-repo-local/org/springframework/boot/spring-boot-sample-web-ui/2.1.8.RELEASE//${env.finalname}.jar"
                            }
                        ]
                        }"""
                ) 
                rtPublishBuildInfo (
                    serverId: "jenk-artifactory-server"
                ) 

            }
        
        }
        stage('Push to ECR') {
            steps {
                    echo "-----ECR-------"
                    sh "ANSIBLE_HOST_KEY_CHECKING=False ansible-playbook  -i /var/lib/jenkins/workspace/integration/hosts /var/lib/jenkins/workspace/integration/playbook1.yml -e 'BUILD=${env.BUILD_NUMBER}'"
            }

        }
        
    }
    
}
